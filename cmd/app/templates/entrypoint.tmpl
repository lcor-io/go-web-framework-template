// AUTOGENERATED
package app

import (
	"strconv"

	"github.com/gofiber/fiber/v3"
	"github.com/gofiber/fiber/v3/middleware/rewrite"

	{{- range .SubRoutes}}
	"default.app/src/app/{{ .Path }}"
	{{- end }}
)

func RegisterRoutes(app *fiber.App) {
	// Middleware to check if the request is coming from HTMX, and is eventually boosted.
	// Store the result in the context locals
	app.Use(func(c fiber.Ctx) error {
		isHTMXRequest, errHtmx := strconv.ParseBool(c.Get("hx-request"))
		isBoosted, errBoosted := strconv.ParseBool(c.Get("hx-boosted"))

		c.Locals("isHTMXRequest", errHtmx == nil && isHTMXRequest)
		c.Locals("isBoosted", errBoosted == nil && isBoosted)

		return c.Next()
	})

	// Default to page 1
	app.Use(rewrite.New(rewrite.Config{
		Rules: map[string]string{
		    {{ $firstRoute := index .SubRoutes 0 -}}
			"/": "/{{ $firstRoute.Path }}",
		},
	}))

	//Sub-routes
    {{ range .SubRoutes }}
	{{ .Opts.Package }}.RegisterRoutes(app.Group("/{{ .Path }}"))
	{{- end }}

	//Components
	{{ range .Routes }}
	router.Get("/tab1", func(ctx fiber.Ctx) error {
		return renderers.DynamicRender(ctx, Tab(1, "Content of tab 1"))
	})
	{{- end }}
}

